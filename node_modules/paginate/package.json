{
  "name": "paginate",
  "description": "Pagination. Especially useful with Mongoose + Express/Jade.",
  "version": "0.2.0",
  "homepage": "https://github.com/tonymilne/paginate",
  "author": {
    "name": "Tony Milne",
    "url": "http://tonymilne.com.au"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tonymilne/paginate.git"
  },
  "bugs": {
    "url": "https://github.com/tonymilne/paginate/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/tonymilne/paginate/blob/master/LICENSE-MIT"
    }
  ],
  "main": "lib/paginate",
  "engines": {
    "node": ">= 0.6.0"
  },
  "scripts": {
    "test": "NODE_ENV=test ./node_modules/mocha/bin/mocha --bail"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.11.3",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-simple-mocha": "^0.4.0",
    "mocha": "^2.3.1",
    "mongoose": "~3.2.1",
    "should": "^7.1.0",
    "step": "0.0.6"
  },
  "keywords": [],
  "dependencies": {
    "jade": "^1.11.0",
    "lodash": "^3.10.1"
  },
  "readme": "# paginate\n\nPagination. Especially useful with Mongoose + Express/Jade.\n\n## Getting Started\nInstall the module with: `npm install paginate`\n\nThe paginate plugin returns a function that accepts an options object.\nCall this to get access to the module functionality itself. E.g:\n\n```javascript\nvar paginate = require('paginate')({\n\t// options go here...\n});\n```\n\n## Documentation\n\n_(Coming soon)_\n\n## Examples\n\n### Basic (non Mongoose) usage\n\n```javascript\nvar paginate = require('paginate')();\nvar data = new Array(95);\n\nvar PER_PAGE = 10;\nvar currentPage = 6;\n\nvar pagination = paginate.page(data.length, PER_PAGE, currentPage);\nvar html = pagination.render({ baseUrl: '/example' });\n```\n\n### Mongoose + Express usage\n\n```\nvar mongoose = require('mongoose');\nvar paginate = require('paginate')({\n\tmongoose: mongoose\n});\n\n// @NOTE: Assuming a post model has been created and registered...\nvar Post = mongoose.model('posts');\n\n// An express route action:\napp.get('/posts', function(req, res, next) {\n\tPost.find()\n\t.paginate({ page: req.query.page }, function(err, posts) {\n\t\tres.render('posts/index', {\n\t\t\tposts: posts\n\t\t})\n\t});\n});\n```\n\nThen in the posts/index template, you could include the html generated from posts.pagination.render().\nE.g. in Jade, this might look like:\n```\n!= posts.pagination.render({ baseUrl: '/posts })\n```\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt](https://github.com/cowboy/grunt).\n\n## Release History\n\n### 0.2.0\n\n- UPDATE: Dependencies updated to newer versions (including Grunt).\n- UPDATE: Template and CSS classes updated to better match Twitter Bootstrap pagination.\n\n### 0.1.1\n\n- FIX: Queries with 0 results caused an invalid skip value to throw an error.\n- FIX: Typo in the readme params to query.\n\n## License\nCopyright (c) 2012 Tony Milne\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "paginate@0.2.0",
  "dist": {
    "shasum": "01e914104fc8edf53444d491121f843498e002b4"
  },
  "_from": "paginate@",
  "_resolved": "https://registry.npmjs.org/paginate/-/paginate-0.2.0.tgz"
}
